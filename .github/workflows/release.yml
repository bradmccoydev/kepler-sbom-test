name: Release
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tag:
        description: "Tag name, e.g. v0.4"
        default: v0.4
        required: true
      release:
        description: "Release name, e.g. release-0.4"
        default: release-0.4
        required: true
      rpm_version:
        description: "rpm version, e.g. 0.4"
        default: 0.4
        required: true
      rpm_release:
        description: "rpm release, e.g. 1"
        default: 1
        required: true
      committer:
        description: "rpm committer, e.g. gh-actions"
        default: "gh-actions"
        required: false
      changelog:
        description: "rpm changelog, e.g. new release"
        default: "new release"
        required: false
      arch:
        description: "rpm arch, e.g. x86_64"
        default: "x86_64"
        required: false

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-22.04
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Create tag
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ github.event.inputs.tag }}',
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.release }}
          draft: false
          prerelease: false

      - name: Build RPM packages
        id: rpm_build
        env:
          _VERSION_ : ${{ github.event.inputs.rpm_version }}
          _RELEASE_: ${{ github.event.inputs.rpm_release }}
          _COMMITTER_: ${{ github.event.inputs.committer }}
          _CHANGELOG_: ${{ github.event.inputs.changelog }}
          _ARCH_: ${{ github.event.inputs.arch }}
        run: |
          make containerized_build_rpm
          make containerized_build_container_rpm
          cd _output/rpmbuild/
          sudo tar czvf /tmp/kepler.rpm.tar.gz RPMS/
      
      - name: release rpm
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: /tmp/kepler.rpm.tar.gz
  
  create-release-branch:
    name: Create release branch
    needs: [build]
    runs-on: ubuntu-22.04
    steps: 
    - name: Create release branch
      uses: peterjgrainger/action-create-branch@64aa569aea81305305c6e92bd236d8c427debff8 # v2.4.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ github.event.inputs.release }}
        sha: '${{ github.event.pull_request.head.sha }}'
      
  push-image:
    name: Push image to the registry
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2
    - name: Login to Quay
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
      with:
        registry: quay.io/bradmccoydev1
        username: ${{ secrets.BOT_NAME }}
        password: ${{ secrets.BOT_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
      with:
          context: .
          platforms: linux/amd64
          push: true
          tags: quay.io/bradmccoydev1/test
          labels: latest, ${{ github.event.inputs.release }}
          file: build/Dockerfile
